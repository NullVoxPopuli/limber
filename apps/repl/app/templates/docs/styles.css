.docs-nav {
  display: flex;
  gap: 1rem;
  padding: 1rem;

  a {
    display: grid;
    grid-auto-flow: column;
    gap: 0.5rem;
    align-items: center;

    &:hover {
      text-decoration: underline;
    }
  }

}

.centered-content {
  margin-top: 1rem;
  padding-bottom: 80px;
  display: flex;
  justify-content: center;

  iframe {
    width: 100%;
    border: 1px solid;
    border-radius: 0.5rem;
  }

  section.options {
    h2 {
      border-bottom: 1px dashed gray;
      margin-bottom: 0;
    }

    display: grid;
    gap: 1rem;
  }

  .limber__docs__option {
    display: grid;
    gap: 0.5rem;
    align-items: center;
    grid-template-areas:
      "name . . type"
      "description description description description";


    > h3 {
      margin: 0;
      display: inline-block;
      grid-area: name;
    }
    > p {
      margin: 0;
      grid-area: description;
    }
    > pre {
      margin: 0;
      display: inline-block;
      grid-area: type;

      code {
      }
    }
  }

  .prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::before,
  .prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::after {
    content: unset;
  }
}


.limber__docs__option__example {
  display: grid;
    gap: 0.5rem;
  grid-template-areas:
    "code code label"
    "output output output";

  &[data-configurable="false"] {
    grid-template-areas:
      "code code code"
      "output output output";
  }

  pre {
    margin: 0;
  }

  .label {
    width: min-content;
    grid-area: label;
    label {
      display: grid;
      grid-auto-flow: row;

      &:has([type="radio"]) {
        display: flex;
        gap: 0.5rem;
      }
    }
    input {
      width: 100%;
      border: 1px solid;
      padding: 0.125rem 0.25rem;

      &[type="radio"] {
        width: auto;
      }
    }
  }
  .code {
    grid-area: code;
    align-self: end;
  }
  .output{
    grid-area: output;
  }
}

