name: Backend Deploy
on: 
  workflow_run:
    workflows: ["CI"]
    types:
      # as early as possible
      - requested

concurrency:
  group: deploy-backend-${{ github.event.workflow_run.pull_requests[0].number }}
  cancel-in-progress: true

env:
  TURBO_API: http://127.0.0.1:9080
  TURBO_TOKEN: this-is-not-a-secret
  TURBO_TEAM: myself

jobs: 
  # This is the only job that needs access to the source code
  Build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [determinePR]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - uses: actions/upload-artifact@v3
        with:
          name: ask-server 
          if-no-files-found: error
          path: | 
            ./apps/ask-server 

#################################################################            
# For the rest:
# Does not checkout code, has access to secrets
#################################################################            

  determinePR:
    # this job gates the others -- if the workflow_run request did not come from a PR,
    # exit as early as possible
    runs-on: ubuntu-latest
    if: github.event.workflow_run.event == 'pull_request'
    outputs:
      number: ${{ steps.number.outputs.pr-number }}
    steps:
      - run: echo "${{ toJSON(github.event.workflow_run) }}"
      - run: echo "${{ github.event.workflow_run.pull_requests[0].number }}"
        id: number

  DeployPreview_Limber:
    name: "Deploy: Ask Server"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [Build]
    permissions:
      contents: read
      deployments: write
    outputs:
      limberUrl: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/download-artifact@v3
        name: ask-server 
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "ember-docs-prompt" 
          heroku_email: ${{secrets.HEROKU_EMAIL}} 

          # appdir: 'apps/ask-server'
          # healthcheck: '/healthcheck'
          # rollbackonhealthcheckfailed: true
