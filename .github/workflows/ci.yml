name: CI
on:
  pull_request:
  push:
    branches: [main]

##############################################################

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  codemirror: packages/codemirror/
  consts: packages/consts/
  horizon: packages/horizon-theme/
  monaco: packages/monaco
  sw: packages/transpilation/
  NODE_OPTIONS: "--max-old-space-size=4096 --trace-warnings --unhandled-rejections=strict"
  TURBO_API: http://127.0.0.1:9080
  TURBO_TOKEN: this-is-not-a-secret
  TURBO_TEAM: myself

permissions:
  contents: read

##############################################################

jobs:

##############################################################

  install_dependencies:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v3
    - name: TurboRepo local server
      uses: felixmosh/turborepo-gh-artifacts@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Install pnpm'
      # this action aliases the major (via branch) to the latest full version
      # https://github.com/pnpm/action-setup/branches/all
      uses: pnpm/action-setup@v2
      with:
        version: ${{ inputs.pnpm-version }}
    - name: 'Setup node and the cache for pnpm'
      id: setup-node
      # this action aliases the major to the latest full version 
      # https://github.com/actions/setup-node/tags
      uses: actions/setup-node@v3
      with:
        cache: 'pnpm'
        node-version: ${{ inputs.node-version }}
    - name: 'Install dependencies'
      shell: 'bash'
      run: |
        if [[ "${{ steps.setup-node.outputs.cache-hit }}" == "true"]]; then 
          echo "actions/setup-node's cache was hit, so we don't need to install. If you have post-install scripts, (e.g.: prepare), you'll need to run them manually."
        fi

        if [[ "${{ inputs.no-lockfile }}" == "true" ]]; then 
          echo "Detected option --no-lockfile. Lockfile will be deleted before install."
          rm -f pnpm-lock.yaml
        fi
        pnpm install ${{ inputs.args }}


    - run:  echo ${{ github.event.number }} > ./pr-number.txt
    - run: pnpm turbo build
    # Used for faster deploy so we don't need to checkout the repo
    - uses: actions/upload-artifact@v3
      with:
        name: deploy-prep-dist
        if-no-files-found: error
        path: | 
          ./apps/**/dist/**/*
          !node_modules/
          !./**/node_modules/

##############################################################

  lints:
    name: "Lints"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
      - uses: actions/checkout@v3
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: NullVoxPopuli/action-setup-pnpm@v2.0.0
      - run: pnpm lint

##############################################################

  tests:
    name: Tests
    strategy:
      matrix:
        # os: [ubuntu-latest, macOS-latest, windows-latest]
        # browsers: [chrome, firefox, safari, edge]
        ci_browser:
        - Chrome
        - Firefox

    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v3
    - name: TurboRepo local server
      uses: felixmosh/turborepo-gh-artifacts@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: NullVoxPopuli/action-setup-pnpm@v2.0.0
    - name: Environment Info
      run: |
        firefox --version
        google-chrome --version
        echo "Node: $( node --version )"
        echo "NPM: $( npm --version )"
        echo "pnpm: $( pnpm --version )"
    - name: Test
      run: pnpm turbo test:ember --output-logs errors-only
      env:
        CI_BROWSER: ${{ matrix.ci_browser }}

  try-scenarios:
    name: "Test try-scenarios" 
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [tests]
    steps:
    - uses: actions/checkout@v3
    - name: TurboRepo local server
      uses: felixmosh/turborepo-gh-artifacts@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: NullVoxPopuli/action-setup-pnpm@v2.0.0
    - name: Test
      run: pnpm turbo test:scenarios


  browserstack-test:
    name: Browserstack Tests (Safari, Edge, etc)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [tests]

    steps:
    - uses: actions/checkout@v3
    - name: TurboRepo local server
      uses: felixmosh/turborepo-gh-artifacts@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: NullVoxPopuli/action-setup-pnpm@v2.0.0
    - run: pnpm turbo test:browserstack --output-logs errors-only
      env:
        # This is a guest user on an open source plan.
        # (limited access, etc etc)
        #
        # Exposing this key is the only way to reasonably 
        # have browserstack run on PRs from forks
        BROWSERSTACK_ACCESS_KEY: km7yCVefUQDSdFMF9o64
        BROWSERSTACK_USERNAME: glimdown_6vzpNh

##############################################################
##############################################################
#
# These jobs won't run on pull requests.
# They would fail anyway because secrets are not exposed.
#
##############################################################
##############################################################

  DeployProduction:
    name: "Deploy: Production"
    if: github.ref == 'refs/heads/main' 
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [browserstack-test]
    strategy: 
      matrix:
        app: 
        - { path: "./tutorial/dist", cloudflareName: "limber-glimmer-tutorial", name: "tutorial" }
        - { path: "./repl/dist", cloudflareName: "limber-glimdown", name: "limber" }
          
    permissions:
      contents: read
      deployments: write
    outputs:
      limberUrl: ${{ steps.limber.outputs.url }}
      tutorialUrl: ${{ steps.tutorial.outputs.url }}
    steps:
      - uses: actions/download-artifact@v3
        name: deploy-prep-dist
      - name: Publish ${{ matrix.app.id }}
        uses: cloudflare/pages-action@v1.4.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ matrix.app.cloudflareName }}
          directory: ./deploy-prep-dist/${{ matrix.app.path }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}


  # https://github.com/changesets/action
  release:
    name: Release
    if: github.ref == 'refs/heads/main' 
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [try-scenarios]
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: NullVoxPopuli/action-setup-pnpm@v2.0.0
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          title: "Release Preview"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}



