name: "Lints'n'Stuff"
on:
  pull_request:
    branches: [main]

env:
  app: frontend/
  # packages
  codemirror: packages/codemirror/
  consts: packages/consts/
  horizon: packages/horizon-theme/
  monaco: packages/monaco
  tests: tests/
  sw: packages/transpilation/

jobs:
  install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}
    - run: |
        yarn global add pnpm
        pnpm install

  js_app:
    name: "ESLint: JS/TS >> Limber App"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}
    - name: 'Limber App'
      working-directory: ${{ env.app }}
      run: pnpm run lint:js

  js_cm:
    name: "ESLint: JS/TS >> CodeMirror"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}
    - name: 'Code Mirror configuration'
      working-directory: ${{ env.codemirror }}
      run: pnpm run lint:js

  js_monaco:
    name: "ESLint: JS/TS >> Monaco"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}
    - name: 'Monaco configuration'
      working-directory: ${{ env.monaco }}
      run: pnpm run lint:js

  js_consts:
    name: "ESLint: JS/TS >> Consts"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}
    - name: 'Consts'
      working-directory: ${{ env.consts }}
      run: pnpm run lint:js

  js_horizon:
    name: "ESLint: JS/TS >> Horizon Theme"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}
    - name: 'Horizon Theme'
      working-directory: ${{ env.horizon }}
      run: pnpm run lint:js

  js_worker:
    name: "ESLint: JS/TS >> Transpilation Worker"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}

    - name: 'Transpilation'
      working-directory: ${{ env.sw }}
      run: pnpm run lint:js

  js_tests:
    name: "ESLint: JS/TS >> e2e tests"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}
    - name: 'Cypress'
      working-directory: ${{ env.tests }}
      run: pnpm run lint:js

  templates:
    name: "Templates"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}
    - run: pnpm run lint:hbs
      working-directory: ${{ env.app }}

  types:
    name: "Type Correctness"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.lock') }}
    - name: "App Types"
      run: pnpm run check:types
      working-directory: ${{ env.app }}
    - name: "Monaco configuration Types"
      run: pnpm run check:types
      working-directory: ${{ env.monaco }}
    - name: "Code Mirror configuration Types"
      run: pnpm run check:types
      working-directory: ${{ env.codemirror }}
    - name: "Horizon Types"
      run: pnpm run check:types
      working-directory: ${{ env.horizon }}

